{
  "swagger": "2.0",
  "info": {
    "version": "0.4.0",
    "title": "dgx-patron-creator-service"
  },
  "host": "localhost:3001",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v0.1/patrons": {
      "x-swagger-router-controller": "patrons",
      "post": {
        "tags": [
          "patrons"
        ],
        "summary": "Create a Patron",
        "description": "Create a new patron account via NYPL's Simplified Card Creator.",
        "operationId": "patrons_creatorV01",
        "parameters": [
          {
            "name": "patron_data",
            "in": "body",
            "description": "The information of the new patron",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatronsCreatorDataV01"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PatronsCreatorResponseV01"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/400ErrorResponseV01"
            }
          },
          "500": {
            "description": "Generic server error",
            "schema": {
              "$ref": "#/definitions/500ErrorResponseV01"
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "openid write:patron offline_access api"
            ]
          }
        ]
      }
    },
    "/v0.2/patrons": {
      "x-swagger-router-controller": "patrons",
      "post": {
        "tags": [
          "patrons"
        ],
        "summary": "Create a Patron",
        "description": "Create a new patron account via the ILS.",
        "operationId": "patrons_creatorV02",
        "parameters": [
          {
            "name": "patron_data",
            "in": "body",
            "description": "The information of the new patron",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatronsCreatorDataV02"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PatronsCreatorResponseV02"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/400ErrorResponseV02"
            }
          },
          "500": {
            "description": "Generic server error",
            "schema": {
              "$ref": "#/definitions/500ErrorResponseV02"
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "openid write:patron offline_access api"
            ]
          }
        ]
      }
    },
    "/v0.1/validations/username": {
      "x-swagger-router-controller": "validations/username",
      "post": {
        "tags": [
          "validations"
        ],
        "summary": "Create a Patron username validation",
        "description": "Makes a call to NYPL's Simplified Card Creator API for patron username validation.",
        "operationId": "username",
        "parameters": [
          {
            "name": "username",
            "in": "body",
            "description": "The username to be validated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UsernameData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/UsernameResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/400ErrorResponse"
            }
          },
          "500": {
            "description": "Generic server error",
            "schema": {
              "$ref": "#/definitions/500ErrorResponse"
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "openid write:patron offline_access api"
            ]
          }
        ]
      }
    },
    "/v0.1/validations/address": {
      "x-swagger-router-controller": "validations/address",
      "post": {
        "tags": [
          "validations"
        ],
        "summary": "Create a Patron address validation",
        "description": "Makes a call to NYPL's Simplified Card Creator API for patron address validation.",
        "operationId": "address",
        "parameters": [
          {
            "name": "address_data",
            "in": "body",
            "description": "The address to be validated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddressData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AddressResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/400ErrorResponse"
            }
          },
          "500": {
            "description": "Generic server error",
            "schema": {
              "$ref": "#/definitions/500ErrorResponse"
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "openid write:patron offline_access api"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "PatronsCreatorDataV01": {
      "required": [
        "simplePatron"
      ],
      "properties": {
        "simplePatron": {
          "$ref": "#/definitions/SimplePatronV01"
        }
      }
    },
    "SimplePatronV01": {
      "required": [
        "name",
        "dateOfBirth",
        "address",
        "username",
        "pin"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "Mikey Olson, Jr."
        },
        "dateOfBirth": {
          "type": "string",
          "example": "11/11/1987"
        },
        "email": {
          "type": "string",
          "example": "mjolson@example.com"
        },
        "address": {
          "$ref": "#/definitions/AddressModel"
        },
        "username": {
          "type": "string",
          "example": "mjolson54321"
        },
        "pin": {
          "type": "string",
          "example": "1234"
        },
        "ecommunications_pref": {
          "type": "boolean",
          "example": true
        },
        "policy_type": {
          "type": "string",
          "example": "web_applicant"
        },
        "patron_agency": {
          "type": "string",
          "example": "198"
        }
      }
    },
    "PatronsCreatorResponseV01": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/PatronsCreatorResponseModelV01"
        },
        "count": {
          "type": "number",
          "example": 1
        }
      }
    },
    "PatronsCreatorResponseModelV01": {
      "properties": {
        "simplePatron": {
          "$ref": "#/definitions/SimplePatronModelV01"
        },
        "patron": {
          "type": "object",
          "example": {
          }
        }
      }
    },
    "SimplePatronModelV01": {
      "required": [
        "status_code_from_card_creator",
        "type",
        "username",
        "temporary",
        "patron_id",
        "barcode",
        "message",
        "detail"
      ],
      "properties": {
        "status_code_from_card_creator": {
          "type": "number",
          "example": 200
        },
        "type": {
          "type": "string",
          "example": "card-granted"
        },
        "username": {
          "type": "string",
          "example": "mikeolson54321"
        },
        "temporary": {
          "type": "boolean",
          "example": true
        },
        "patron_id": {
          "type": "string",
          "example": "6367028"
        },
        "barcode": {
          "type": "string",
          "example": "6367028"
        },
        "message": {
          "type": "string",
          "example": "Your library card is temporary because your address could not be verified. Visit your local NYPL branch within 30 days to upgrade to a standard card."
        },
        "detail": {
          "type": "object",
          "example": {
          }
        }
      }
    },
    "400ErrorResponse": {
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/400ErrorResponseContent"
        }
      }
    },
    "400ErrorResponseContent": {
      "allOf": [
        {
          "$ref": "#/definitions/400ErrorStatusModel"
        },
        {
          "$ref": "#/definitions/ErrorModel"
        }
      ]
    },
    "400ErrorResponseV01": {
      "properties": {
        "data": {
          "$ref": "#/definitions/400ErrorResponseContentV01"
        },
        "count": {
          "type": "number",
          "example": 0
        }
      }
    },
    "400ErrorResponseContentV01": {
      "allOf": [
        {
          "$ref": "#/definitions/400ErrorStatusSimplePatronV01"
        },
        {
          "$ref": "#/definitions/ErrorModelV01"
        }
      ]
    },
    "500ErrorResponse": {
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/500ErrorResponseContent"
        }
      }
    },
    "500ErrorResponseContent": {
      "allOf": [
        {
          "$ref": "#/definitions/500ErrorStatusModel"
        },
        {
          "$ref": "#/definitions/ErrorModel"
        }
      ]
    },
    "500ErrorResponseV01": {
      "properties": {
        "data": {
          "$ref": "#/definitions/500ErrorResponseContentV01"
        },
        "count": {
          "type": "number",
          "example": 0
        }
      }
    },
    "500ErrorResponseContentV01": {
      "allOf": [
        {
          "$ref": "#/definitions/500ErrorStatusSimplePatronV01"
        },
        {
          "$ref": "#/definitions/ErrorModelV01"
        }
      ]
    },
    "400ErrorStatusSimplePatronV01": {
      "properties": {
        "simplePatron": {
          "$ref": "#/definitions/400ErrorStatusModelV01"
        }
      }
    },
    "400ErrorStatusModelV01": {
      "properties": {
        "status_code_from_card_creator": {
          "type": "number",
          "example": 400
        },
        "type": {
          "type": "string",
          "example": "invalid-request"
        },
        "message": {
          "type": "string",
          "example": "No data"
        },
        "detail": {
          "type": "object",
          "example": {
          }
        }
      }
    },
    "400ErrorStatusModel": {
      "required": [
        "status_code_from_card_creator",
        "type",
        "message"
      ],
      "properties": {
        "status_code_from_card_creator": {
          "type": "number",
          "example": 400
        },
        "type": {
          "type": "string",
          "example": "invalid-request"
        },
        "message": {
          "type": "string",
          "example": "No data"
        }
      }
    },
    "500ErrorStatusModel": {
      "required": [
        "status_code_from_card_creator",
        "type",
        "message"
      ],
      "properties": {
        "status_code_from_card_creator": {
          "type": "number",
          "example": 500
        },
        "type": {
          "type": "string",
          "example": "internal-server-error"
        },
        "message": {
          "type": "string",
          "example": "Internal server error"
        }
      }
    },
    "500ErrorStatusSimplePatronV01": {
      "properties": {
        "simplePatron": {
          "$ref": "#/definitions/500ErrorStatusModelV01"
        }
      }
    },
    "500ErrorStatusModelV01": {
      "properties": {
        "status_code_from_card_creator": {
          "type": "number",
          "example": 500
        },
        "type": {
          "type": "string",
          "example": "internal-server-error"
        },
        "message": {
          "type": "string",
          "example": "Internal server error"
        },
        "detail": {
          "type": "object",
          "example": {
          }
        }
      }
    },
    "ErrorModelV01": {
      "properties": {
        "patron": {
          "type": "object"
        }
      }
    },
    "ErrorModel": {
      "required": [
        "valid",
        "card_type",
        "detail"
      ],
      "properties": {
        "valid": {
          "type": "boolean",
          "example": false
        },
        "card_type": {
          "type": "string"
        },
        "detail": {
          "type": "object",
          "example": {
            "title": "Not found.",
            "debug": "Invalid endpoint: [POST] /v2/validate/address"
          }
        }
      }
    },
    "PatronsCreatorDataV02": {
      "required": [
        "names",
        "patronType"
      ],
      "properties": {
        "names": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [ "TestLastName, TestFirstName" ]
        },
        "barcodes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [ "barcode_2018_07_19_328pm" ]
        },
        "pin": {
          "type": "string",
          "example": "1234"
        },
        "expirationDate": {
          "type": "string",
          "example": "2019-01-01"
        },
        "birthDate": {
          "type": "string",
          "example": "1978-01-01"
        },
        "emails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "test_email_2018_07_19_238_a@test.com",
            "test_email_2018_07_19_238_b@test.com"
          ]
        },
        "patronType": {
          "type": "number",
          "example": 151
        },
        "patronCodes": {
          "type": "object",
          "required": [
            "pcode1",
            "pcode2",
            "pcode3",
            "pcode4"
          ],
          "properties": {
            "pcode1": {
              "type": "string",
              "example": "s"
            },
            "pcode2": {
              "type": "string",
              "example": "f"
            },
            "pcode3": {
              "type": "number",
              "example": 5
            },
            "pcode4": {
              "type": "number",
              "example": 100
            }
          }
        },
        "blockInfo": {
          "type": "object",
          "required": [
            "code"
          ],
          "properties": {
            "code": {
              "type": "string",
              "example": "-"
            }
          }
        },
        "addresses": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "lines",
              "type"
            ],
            "properties": {
              "lines": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "ADDRESS LINE 1",
                  "ADDRESS LINE 2"
                ]
              },
              "type": {
                "type": "string",
                "example": "a"
              }
            }
          }
        },
        "phones": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "number",
              "type"
            ],
            "properties": {
              "number": {
                "type": "string",
                "example": "917-123-4567"
              },
              "type": {
                "type": "string",
                "example": "t"
              }
            }
          }
        }
      }
    },
    "PatronsCreatorResponseV02": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/PatronsCreatorResponseModelV02"
        },
        "count": {
          "type": "number",
          "example": 1
        }
      }
    },
    "PatronsCreatorResponseModelV02": {
      "required": [
        "names",
        "patronType"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "example": 7212911
        },
        "names": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [ "TestLastName, TestFirstName" ]
        },
        "barcodes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [ "barcode_2018_07_19_328pm" ]
        },
        "pin": {
          "type": "string",
          "example": "1111"
        },
        "expirationDate": {
          "type": "string",
          "example": "2019-01-01"
        },
        "birthDate": {
          "type": "string",
          "example": "1978-01-01"
        },
        "emails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "test_email_2018_07_19_238_a@test.com",
            "test_email_2018_07_19_238_b@test.com"
          ]
        },
        "patronType": {
          "type": "number",
          "example": 151
        },
        "patronCodes": {
          "type": "object",
          "example": {
            "pcode1": "s",
            "pcode2": "f",
            "pcode3": 5,
            "pcode4": 100
          }
        },
        "blockInfo": {
          "type": "string",
          "example": {
            "code": "-"
          }
        },
        "addresses": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "example": [{
            "lines": [
              "ADDRESS LINE 1",
              "ADDRESS LINE 2"
            ],
            "type": "a"
          }]
        },
        "type": {
          "type": "string",
          "example": {
            "code": "a"
          }
        },
        "phones": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "example": [{
            "number": "917-123-4567",
            "type": "t"
          }]
        }
      }
    },
    "400ErrorResponseV02": {
      "properties": {
        "status_code_from_ils": {
          "type": "number",
          "example": 400
        },
        "type": {
          "type": "string",
          "example": "invalid-request"
        },
        "message": {
          "type": "string",
          "example": "No data"
        },
        "detail": {
          "type": "object",
          "example": {
          }
        }
      }
    },
    "500ErrorResponseV02": {
      "properties": {
        "status_code_from_ils": {
          "type": "number",
          "example": 500
        },
        "type": {
          "type": "string",
          "example": "internal-server-error"
        },
        "message": {
          "type": "string",
          "example": "Internal server error"
        },
        "detail": {
          "type": "object",
          "example": {
          }
        }
      }
    },
    "UsernameData": {
      "required": [
        "username"
      ],
      "properties": {
        "username": {
          "type": "string",
          "example": "mikeolson"
        }
      }
    },
    "UsernameResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/UsernameResponseModel"
        }
      }
    },
    "UsernameResponseModel": {
      "required": [
        "status_code_from_card_creator",
        "valid",
        "type",
        "card_type",
        "message",
        "detail"
      ],
      "properties": {
        "status_code_from_card_creator": {
          "type": "number",
          "example": 200
        },
        "valid": {
          "type": "boolean",
          "example": true
        },
        "type": {
          "type": "string",
          "example": "available-username"
        },
        "card_type": {
          "type": "string",
          "example": "standard"
        },
        "message": {
          "type": "string",
          "example": "This username is available."
        },
        "detail": {
          "type": "object",
          "example": {}
        }
      }
    },
    "AddressData": {
      "description": "The data format of the input address",
      "required": [
        "address"
      ],
      "properties": {
        "address": {
          "$ref": "#/definitions/AddressModel"
        },
        "is_work_or_school_address": {
          "type": "boolean",
          "default": false,
          "example": true
        }
      }
    },
    "AddressResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/AddressResponseModel"
        }
      }
    },
    "AddressResponseModel": {
      "required": [
        "status_code_from_card_creator",
        "valid",
        "type",
        "card_type",
        "message",
        "detail",
        "addresses",
        "original_address"
      ],
      "properties": {
        "status_code_from_card_creator": {
          "type": "number",
          "example": 200
        },
        "valid": {
          "type": "boolean",
          "example": true
        },
        "type": {
          "type": "string",
          "example": "valid-address"
        },
        "card_type": {
          "type": "string",
          "example": "standard"
        },
        "message": {
          "type": "string",
          "example": "This valid address will result in a standard library card."
        },
        "detail": {
          "type": "object",
          "example": {}
        },
        "addresses": {
          "type": "array",
          "items": {
            "required": [
              "line_1",
              "line_2",
              "city",
              "county",
              "state",
              "zip",
              "is_residential"
            ],
            "properties": {
              "line_1": {
                "type": "string",
                "example": "123 W40th St"
              },
              "line_2": {
                "type": "string",
                "example": ""
              },
              "city": {
                "type": "string",
                "example": "New York"
              },
              "county": {
                "type": "string",
                "example": "New York"
              },
              "state": {
                "type": "string",
                "example": "NY"
              },
              "zip": {
                "type": "string",
                "example": "10018-2600"
              },
              "is_residential": {
                "type": "boolean",
                "example": false
              }
            }
          }
        },
        "original_address": {
          "$ref": "#/definitions/AddressModel"
        }
      }
    },
    "AddressModel": {
      "type": "object",
      "required": [
        "line_1",
        "city",
        "state",
        "zip"
      ],
      "properties": {
        "line_1": {
          "type": "string",
          "example": "123 Fake Street"
        },
        "line_2": {
          "type": "string",
          "example": ""
        },
        "city": {
          "type": "string",
          "example": "New York"
        },
        "state": {
          "type": "string",
          "example": "NY"
        },
        "zip": {
          "type": "string",
          "example": "10018"
        }
      }
    }
  },
  "tags": [
    {
      "name": "patrons",
      "description": "Patron API"
    },
    {
      "name": "validations",
      "description": "Validations API"
    }
  ],
  "securityDefinitions": {
    "api_auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://isso.nypl.org/oauth/authorize",
      "tokenUrl": "https://isso.nypl.org/oauth/token",
      "scopes": {
        "openid write:patron offline_access api": "Creating Patron and Validations access"
      }
    }
  }
}
